// the version of the language, use proto3 for contracts
syntax = "proto3";

package googleAuthDemo;

// some core imports for AElf chain types
import "aelf/core.proto";
import "aelf/options.proto";
import "acs12.proto";
import "request_interface.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AetherLink.Contracts.GoogleAuthDemo";

service GoogleAuthDemoContract {

    // the full name of the C# class that will contain the state (here <namespace>.<state-class-name> format).
    option (aelf.base) = "acs12.proto";
    option (aelf.base) = "request_interface.proto";
    option (aelf.csharp_state) = "AetherLink.Contracts.GoogleAuthDemo.GoogleAuthDemoContractState";

    rpc Initialize(InitializeInput) returns (google.protobuf.Empty) {}
    rpc GetFulfillResponse(aelf.Hash) returns (GoogleRoundData) { option (aelf.is_view) = true; }
}

message InitializeInput {
    aelf.Address admin = 1;
    aelf.Address oracle = 2;
    int32 data_feeds_request_type_index = 3;
    int32 vrf_request_type_index = 4;
}

message GoogleRoundData {
    int64 round_id = 1;
    bytes data = 2;
    google.protobuf.Timestamp updated_at = 3;
}
